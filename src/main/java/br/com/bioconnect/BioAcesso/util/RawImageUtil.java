package br.com.bioconnect.BioAcesso.util;

import java.awt.Point;
import java.awt.Transparency;
import java.awt.image.BufferedImage;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.DataBuffer;
import java.awt.image.DataBufferByte;
import java.awt.image.Raster;
import java.awt.image.WritableRaster;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.file.Files;
import java.util.Base64;

import javax.imageio.ImageIO;

import org.springframework.util.Base64Utils;

public class RawImageUtil {

	public static byte[] extractBytes(String imageName) throws IOException {
		File fi = new File(imageName);
		return Files.readAllBytes(fi.toPath());
	}

	public static BufferedImage toBufferedImg(byte[] imageBytes, int width, int height) {
		DataBuffer buffer = new DataBufferByte(imageBytes, imageBytes.length);

		// 3 bytes per pixel: red, green, blue
		// WritableRaster raster = Raster.createInterleavedRaster(buffer, width, height,
		// 3 * width, 3, new int[] { 0, 1, 2 }, (Point) null);
		WritableRaster raster = Raster.createInterleavedRaster(buffer, width, height, 1 * width, 1, new int[] { 0, 0, 0 }, (Point) null);
		ColorModel cm = new ComponentColorModel(ColorModel.getRGBdefault().getColorSpace(), false, true, Transparency.OPAQUE, DataBuffer.TYPE_BYTE);
		//ColorModel cm = new ComponentColorModel(ColorModel.getRGBdefault().getColorSpace(), false, true, Transparency.OPAQUE, BufferedImage.TYPE_INT_RGB);
		BufferedImage image = new BufferedImage(cm, raster, true, null);

		return image;
	}

	public static void SavePNG(byte[] imageBytes, int width, int height, String fileName) throws IOException {
		ImageIO.write(toBufferedImg(imageBytes, width, height), "png", new File(fileName));
	}
	
	public static void SavePNG(BufferedImage buffer, String fileName) throws IOException {
		ImageIO.write(buffer, "png", new File(fileName));
	}

	public static void SaveJPG(byte[] imageBytes, int width, int height, String fileName) throws IOException {
		ImageIO.write(toBufferedImg(imageBytes, width, height), "jpg", new File(fileName));
	}
	
	public static void SaveJPG(BufferedImage buffer, String fileName) throws IOException {
		ImageIO.write(buffer, "jpg", new File(fileName));
	}
	
	public static void SaveBMP(byte[] imageBytes, String fileName) throws IOException {
		BufferedImage image = ImageIO.read( new ByteArrayInputStream( imageBytes ) );
		ImageIO.write(image, "BMP", new File(fileName));
	}
	
	public static void testeHugo(byte[] imageBytes, String fileName) throws IOException {
		try (OutputStream stream = new FileOutputStream(fileName)) {
		    stream.write(imageBytes);
		}
	}
	
	public static void main(String[] args) {
		String inFile = "/Users/fabiocardoso/Desktop/libfprint/finger_gray.raw";
		String outFile = "/home/hugo/testehugo.jpg";
		byte[] aByteArray = null;
		try {
			aByteArray = Base64.getDecoder().decode("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"
					+ "");
			
			
			//aByteArray = extractBytes(inFile);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		int width = 348;
		int height = 457;

		try {
			//SaveJPG(aByteArray, width, height, outFile);
			testeHugo(aByteArray, outFile);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
}
